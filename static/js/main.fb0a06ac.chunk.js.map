{"version":3,"sources":["App.js","index.js"],"names":["App","props","placeholder","state","markdown","maximizedEditor","maximizedPreviewer","updateMarkdown","bind","handleMaximizedEditor","handleMaximizedPreviewer","event","this","setState","target","value","expandArrow","icon","faExpandArrowsAlt","size","compressArrow","faCompressAlt","freeCodeCamp","faFreeCodeCamp","classes","className","onClick","id","type","onChange","dangerouslySetInnerHTML","__html","marked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oSAmHeA,E,kDA5Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAL,qlCA8CA,EAAKC,MAAQ,CACXC,SAAU,EAAKF,YACfG,iBAAiB,EACjBC,oBAAoB,GAGtB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,sBAAwB,EAAKA,sBAAsBD,KAA3B,gBAC7B,EAAKE,yBAA2B,EAAKA,yBAAyBF,KAA9B,gBAxDf,E,kDA2DnB,SAAeG,GACbC,KAAKC,SAAS,CAAET,SAAUO,EAAMG,OAAOC,U,mCAGzC,WACEH,KAAKC,SAAS,CAAER,iBAAkBO,KAAKT,MAAME,oB,sCAG/C,WACEO,KAAKC,SAAS,CAAEP,oBAAqBM,KAAKT,MAAMG,uB,oBAGlD,WACE,IAAMU,EAAc,cAAC,IAAD,CAAiBC,KAAMC,IAAmBC,KAAK,OAE7DC,EAAgB,cAAC,IAAD,CAAiBH,KAAMI,IAAeF,KAAK,OAE3DG,EAAe,cAAC,IAAD,CAAiBL,KAAMM,IAAgBJ,KAAK,OAE3DK,EACJZ,KAAKT,MAAME,gBAAkB,CAAC,kCAAmC,mBAAoBe,EAAeE,EAAc,sBAChHV,KAAKT,MAAMG,mBAAqB,CAAC,mBAAoB,kCAAmCc,EAAeE,EAAc,sBACnH,CAAC,wBAAyB,wBAAyBN,EAAaM,EAAc,YAEpF,OACE,sBAAKG,UAAU,UAAf,UACE,sBAAKA,UAAWD,EAAQ,GAAxB,UACE,sBAAKC,UAAU,SAAf,UACE,uBAAMA,UAAU,eAAhB,UAAgCD,EAAQ,GACtC,sBAAMC,UAAU,cAAhB,uBAEF,sBAAMA,UAAU,aAAaC,QAASd,KAAKH,sBAA3C,SAAmEe,EAAQ,QAE7E,0BAAUG,GAAG,SAASF,UAAWD,EAAQ,GAAII,KAAK,OAAOb,MAAOH,KAAKT,MAAMC,SAAUyB,SAAUjB,KAAKL,oBAEtG,sBAAKkB,UAAWD,EAAQ,GAAxB,UACE,sBAAKC,UAAU,SAAf,UACE,uBAAMA,UAAU,eAAhB,UAAgCD,EAAQ,GACtC,sBAAMC,UAAU,cAAhB,0BAEF,sBAAMA,UAAU,aAAaC,QAASd,KAAKF,yBAA3C,SAAsEc,EAAQ,QAEhF,qBAAKM,wBAAyB,CAAEC,OAAQC,IAAOpB,KAAKT,MAAMC,WAAaqB,UAAWD,EAAQ,GAAIG,GAAG,sB,GAtGzFM,IAAMC,WCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fb0a06ac.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExpandArrowsAlt, faCompressAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faFreeCodeCamp } from '@fortawesome/free-brands-svg-icons';\nimport marked from 'marked';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.placeholder = `\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\\  \nOr _italic_.\\  \nOr... wait for it...**_both!_**\\    \n\\And feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbered lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n[React Logo w/ Text]\n`;\n\n    this.state = {\n      markdown: this.placeholder,\n      maximizedEditor: false,\n      maximizedPreviewer: false\n    }\n\n    this.updateMarkdown = this.updateMarkdown.bind(this);\n    this.handleMaximizedEditor = this.handleMaximizedEditor.bind(this);\n    this.handleMaximizedPreviewer = this.handleMaximizedPreviewer.bind(this);\n  }\n\n  updateMarkdown(event) {\n    this.setState({ markdown: event.target.value });\n  }\n\n  handleMaximizedEditor() {\n    this.setState({ maximizedEditor: !this.state.maximizedEditor });\n  }\n\n  handleMaximizedPreviewer() {\n    this.setState({ maximizedPreviewer: !this.state.maximizedPreviewer });\n  }\n\n  render() {\n    const expandArrow = <FontAwesomeIcon icon={faExpandArrowsAlt} size='1x' />\n\n    const compressArrow = <FontAwesomeIcon icon={faCompressAlt} size='lg' />\n\n    const freeCodeCamp = <FontAwesomeIcon icon={faFreeCodeCamp} size='lg' />\n\n    const classes =\n      this.state.maximizedEditor ? ['container-1 container maximized', 'container-1 hide', compressArrow, freeCodeCamp, 'textarea maximized'] :\n        this.state.maximizedPreviewer ? ['container-2 hide', 'container-2 container maximized', compressArrow, freeCodeCamp, 'textarea maximized'] :\n          ['container-1 container', 'container-2 container', expandArrow, freeCodeCamp, 'textarea'];\n\n    return (\n      <div className='wrapper'>\n        <div className={classes[0]}>\n          <div className='header'>\n            <span className='header-title'>{classes[3]}\n              <span className='header-text'>Editor</span>\n            </span>\n            <span className='arrow-icon' onClick={this.handleMaximizedEditor}>{classes[2]}</span>\n          </div>\n          <textarea id='editor' className={classes[4]} type='text' value={this.state.markdown} onChange={this.updateMarkdown}></textarea>\n        </div>\n        <div className={classes[1]}>\n          <div className='header'>\n            <span className='header-title'>{classes[3]}\n              <span className='header-text'>Previewer</span>\n            </span>\n            <span className='arrow-icon' onClick={this.handleMaximizedPreviewer}>{classes[2]}</span>\n          </div>\n          <div dangerouslySetInnerHTML={{ __html: marked(this.state.markdown) }} className={classes[4]} id='preview'></div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Css/index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}